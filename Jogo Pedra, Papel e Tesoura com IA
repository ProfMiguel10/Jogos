package ia;

import java.util.*;

public class JogoIAPPT {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		Random random = new Random();
		String[] op = { "Pedra", "Papel", "Tesoura" };
		boolean jogar = true;

		int[] hisJog = { 0, 0, 0 };
		int[] historicoMaquina = { 0, 0, 0 };

		while (jogar) {
			System.out.println("Digite: 0 para Pedra, 1 para Papel, 2 para Tesoura");
			int escolhaJog = in.nextInt();

			if (escolhaJog < 0 || escolhaJog > 2) {
				System.out.println("Erro! Tente novamente.");
				continue;
			}

			hisJog[escolhaJog]++;

			int escolhaMaq = escolhaIA(hisJog, random);
			historicoMaquina[escolhaMaq]++;

			System.out.println("Você: " + op[escolhaJog]);
			System.out.println("Máquina: " + op[escolhaMaq]);

			if (escolhaJog == escolhaMaq) {
				System.out.println("Empate!");
			} else if ((escolhaJog == 0 && escolhaMaq == 2) || (escolhaJog == 1 && escolhaMaq == 0)
					|| (escolhaJog == 2 && escolhaMaq == 1)) {
				System.out.println("Você ganhou!");
			} else {
				System.out.println("Você perdeu!");
			}

			int dica = dicaMelhorJogada(historicoMaquina);
			System.out.println("Dica: Considere jogar " + op[dica]);

			System.out.print("Deseja continuar? (s/n): ");
			char resposta = in.next().toLowerCase().charAt(0);
			if (resposta != 's') {
				jogar = false;
			}
		}
		in.close();
	}

	public static int escolhaIA(int[] hisJog, Random random) {
		int total = Arrays.stream(hisJog).sum();
		if (total == 0) {
			return random.nextInt(3);
		}
		double[] prob = new double[3];
		for (int i = 0; i < 3; i++) {
			prob[i] = (double) hisJog[i] / total;
		}

		double rand = random.nextDouble();
		if (rand < prob[0]) {
			return 1;
		} else if (rand < prob[0] + prob[1]) {
			return 2;
		} else {
			return 0;
		}
	}

	public static int dicaMelhorJogada(int[] historicoMaquina) {
		int total = Arrays.stream(historicoMaquina).sum();
		if (total == 0) {
			return new Random().nextInt(3);
		}
		double[] prob = new double[3];
		for (int i = 0; i < 3; i++) {
			prob[i] = (double) historicoMaquina[i] / total;
		}
		if (prob[0] >= prob[1] && prob[0] >= prob[2]) {
			return 1;
		} else if (prob[1] >= prob[0] && prob[1] >= prob[2]) {
			return 2;
		} else {
			return 0;
		}
	}
}
